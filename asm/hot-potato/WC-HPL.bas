10 'WINTER CAMP XLV HOT POTATO RANDOMIZER
20 'ALAN WILSON 2021
25 'BE SURE TO RUN 7000 FIRST TO LOAD ASM
25 CLEAR 2048
30 RANDOM
35 IL = 50
40 DIM N$(IL) 'LIST OF NAMES
50 DIM NU(IL) 'NAME USED 1 OR NOT 0
60 NN = 0 'TOTAL NUM NAMES
70 REM TIME BTWN EVENTS (APROX SECS)
80 BI = 1
90 BX = 20
100 REM TIME EVENT LASTS
110 CI = 5
120 CX = 15
200 CLS 'NAME INPUT
205 GOSUB 1700
210 PRINT "        ";
220 PRINT NN
230 PRINT "ENTER YOUR NAME"
240 A$ = ""
250 INPUT A$
260 IF A$ = "DONE" GOTO 390
270 PRINT A$
280 IF A$ = "" GOTO 200
285 IF LEN(A$)>10 PRINT"TOO LONG":FORZZ=0TO300:NEXTZZ:GOTO200
290 PRINT "PRESS Y TO CONFIRM, N TO REDO"
310 B$ = INKEY$
320 IF B$ = "" GOTO 310
330 IF B$ = "Y" GOTO 350
340 GOTO 200
350 N$(NN) = A$
360 NN = NN + 1
370 GOTO 200
390 'DONE
400 FOR I = 0 TO NN-1
410 NU(I) = 0
420 NEXT I
1000 'HOT POTATO LOOP
1005 POKE 16526,50 'beep
1006 X = USR(0)
1010 CLS
1016 GOSUB 1700 ;TITLE
1020 DT = BT
1030 GOSUB 3500 ;DELAY 
1040 GOSUB 1400 ;PICK NAME
1050 GOSUB 2000 ;PICK TIME
1060 CLS
1066 GOSUB 1700 ;TITLE
1075 A$ = R$
1076 GOSUB 4000 
1077 POKE 16526,31 'bigprint
1078 X = USR(24560)
1090 DT = CT
1100 GOSUB 3500 ;DELAY 2
1101 IF R = 1 NU(QI) = 100 : PRINT
1102 IF R = 1 PRINT "                          ELIMINATED" 
1110 GOTO 1000
1400 'RAND PICK NAME, THEN UNSEL
1410 NI = NI + RND(NN)-1
1430 GOSUB 1500 'PICK
1440 IF R$ = "NULL" THEN GOSUB 1600
1450 NU(NI) = 1 'DESEL
1455 QI = NI
1490 RETURN
1500 'SELECT NEXT UNPICK
1505 Z = 0
1510 NI = NI + 1
1520 IF NI >= NN THEN GOTO 1560 'REACHED END
1522 IF Z = 3 THEN R$ = "NULL" : RETURN 'ALL AND NONE
1525 IF NU(NI) <> 0 THEN NI = NI + 1 : GOTO 1520 'SKIP UNSEL
1530 R$ = N$(NI)
1550 RETURN
1560 'CASE THAT NI >= NN
1570 NI = NI - NN
1580 IF NI >= NN THEN GOTO 1560
1590 Z = Z + 1
1595 GOTO 1522
1600 'RESET SELD NAMES
1610 FOR I = 0 TO NN-1
1620 IF NU(I) < 100 THEN NU(I) = 0
1630 NEXT I
1632 NI = RND(NN) 'RE RANDOM
1635 GOSUB 1500 'CALL NAME SEL
1640 RETURN
1700 PRINT "                WINTER CAMP XLV HOT POTATO LUNCH";
1710 RETURN
2000 'RAND SEL TIME AND DUR
2010 BT = RND(BX-BI+1)+BI-1 'SEL BTWN BI AND BX, INC
2020 CT = RND(CX-CI+1)+CI-1
2030 RETURN
3000 'DELAY OF ~DT SECONDS
3010 FOR ZY = 1 TO DT 
3030 POKE 15423,128
3040 FOR ZZ = 1 TO 100 
3050 NEXT ZZ
3055 POKE 15423,143
3060 FOR ZZ = 1 TO 100
3070 NEXT ZZ
3080 NEXT ZY
3090 RETURN
3500 'DELAY, BUT EXIT WITH SPACE
3502 R = 0
3505 IF INKEY$ <> "" GOTO 3505
3510 FOR ZY = 1 TO DT 
3530 POKE 15423,128
3540 FOR ZZ = 1 TO 50 
3545 IF INKEY$ = " " GOTO 3600
3550 NEXT ZZ
3555 POKE 15423,143
3560 FOR ZZ = 1 TO 50
3565 IF INKEY$ = " " GOTO 3600
3570 NEXT ZZ
3580 NEXT ZY
3590 RETURN
3600 R = 1 : GOTO 3590
4000 'CONV STRING BIGPRINT A$
4010 ZM = 24560 'PUT STRING HERE IN RAM
4020 ZP = INT((10-LEN(A$))/2) 'CENTER
4030 IF ZP = 0 GOTO 4050
4040 POKE ZM,32
4041 ZM = ZM + 1
4045 ZP = ZP - 1
4048 GOTO 4030
4050 FOR ZI = 1 TO LEN(A$)
4070 ZS$ = MID$(A$,ZI,1)
4080 ZA = ASC(ZS$)
4090 POKE ZM,ZA
4095 ZM = ZM + 1
4100 NEXT ZI
4110 POKE ZM,0
4120 RETURN
7000 CLS : PRINT "LOADING" 'PAYLOAD FOR BIGPRINT
7001 IX = 24576 'ADDRESS IN RAM 0X6000
7002 RESTORE
7003 READ Z
7005 POKE IX,Z
7006 IX = IX + 1
7007 GOTO 7003
7008 DATA 205,20,97,1,2,61,17,62,99,205,54,96
7009 DATA 1,2,62,17,73,99,205,54,96,1,2,63
7010 DATA 17,84,99,205,54,96,201,205,127,10,1,130
7011 DATA 61,84,93,213,197,205,20,97,193,209,205,54
7012 DATA 96,201,205,244,96,201,26,254,0,40,14,197
7013 DATA 225,205,74,96,3,3,3,3,3,3,19,24
7014 DATA 237,201,197,213,34,58,99,230,63,33,52,97
7015 DATA 68,77,38,0,111,41,41,41,9,43,34,60
7016 DATA 99,6,3,42,60,99,35,35,35,34,60,99
7017 DATA 197,6,3,197,42,60,99,205,168,96,193,42
7018 DATA 60,99,43,34,60,99,16,239,193,197,62,1
7019 DATA 184,32,12,33,52,99,6,6,62,15,166,119
7020 DATA 35,16,249,42,60,99,35,35,35,34,60,99
7021 DATA 205,195,96,193,16,193,205,195,96,209,193,201
7022 DATA 126,7,87,33,52,99,6,6,122,230,1,79
7023 DATA 135,129,79,126,135,135,129,119,35,122,7,87
7024 DATA 16,238,201,33,52,99,6,6,62,128,182,119
7025 DATA 35,16,249,42,58,99,84,93,33,52,99,1
7026 DATA 6,0,237,176,42,58,99,62,64,133,111,140
7027 DATA 149,103,34,58,99,33,52,99,6,6,175,119
7028 DATA 35,16,251,201,17,200,0,62,2,211,255,205
7029 DATA 15,97,62,1,211,255,205,15,97,27,122,179
7030 DATA 32,237,62,0,211,255,201,6,136,16,254,201
7031 DATA 17,144,1,62,2,211,255,205,47,97,62,1
7032 DATA 211,255,205,47,97,27,122,179,32,237,62,0
7033 DATA 211,255,201,6,68,16,254,201,56,68,4,52
7034 DATA 84,84,56,0,16,40,68,68,124,68,68,0
7035 DATA 120,36,36,56,36,36,120,0,56,68,64,64
7036 DATA 64,68,56,0,120,36,36,36,36,36,120,0
7037 DATA 124,64,64,120,64,64,124,0,124,64,64,120
7038 DATA 64,64,64,0,60,64,64,76,68,68,60,0
7039 DATA 68,68,68,124,68,68,68,0,124,16,16,16
7040 DATA 16,16,124,0,4,4,4,4,4,68,56,0
7041 DATA 68,72,80,96,80,72,68,0,64,64,64,64
7042 DATA 64,64,124,0,68,108,84,84,68,68,68,0
7043 DATA 68,100,84,76,68,68,68,0,56,68,68,68
7044 DATA 68,68,56,0,120,68,68,120,64,64,64,0
7045 DATA 56,68,68,68,84,72,52,0,120,68,68,120
7046 DATA 80,72,68,0,56,68,64,56,4,68,56,0
7047 DATA 124,16,16,16,16,16,16,0,68,68,68,68
7048 DATA 68,68,56,0,68,68,68,40,40,16,16,0
7049 DATA 68,68,68,84,84,108,68,0,68,68,40,16
7050 DATA 40,68,68,0,68,68,40,16,16,16,16,0
7051 DATA 124,4,8,16,32,64,124,0,16,56,84,16
7052 DATA 16,16,16,0,16,16,16,16,84,56,16,0
7053 DATA 0,16,32,124,32,16,0,0,0,16,8,124
7054 DATA 8,16,0,0,0,0,0,0,0,0,124,0
7055 DATA 0,0,0,0,0,0,0,0,16,16,16,16
7056 DATA 16,0,16,0,40,40,0,0,0,0,0,0
7057 DATA 40,40,124,40,124,40,40,0,16,60,80,56
7058 DATA 20,120,16,0,96,100,8,16,32,76,12,0
7059 DATA 32,80,80,32,84,72,52,0,12,12,8,16
7060 DATA 0,0,0,0,8,16,32,32,32,16,8,0
7061 DATA 32,16,8,8,8,16,32,0,16,84,56,124
7062 DATA 56,84,16,0,0,16,16,124,16,16,0,0
7063 DATA 0,0,0,0,0,24,24,16,0,0,0,124
7064 DATA 0,0,0,0,0,0,0,0,0,24,24,0
7065 DATA 0,4,8,16,32,64,0,0,56,68,76,84
7066 DATA 100,68,56,0,16,48,16,16,16,16,56,0
7067 DATA 56,68,4,56,64,64,124,0,56,4,4,24
7068 DATA 4,4,56,0,8,24,40,72,124,8,8,0
7069 DATA 124,64,120,4,4,68,56,0,24,32,64,120
7070 DATA 68,68,56,0,124,4,8,16,32,64,64,0
7071 DATA 56,68,68,56,68,68,56,0,56,68,68,60
7072 DATA 4,8,48,0,0,48,48,0,48,48,0,0
7073 DATA 0,48,48,0,48,48,32,64,8,16,32,64
7074 DATA 32,16,8,0,0,0,124,0,124,0,0,0
7075 DATA 64,32,16,8,16,32,64,0,56,68,4,8
7076 DATA 16,0,16,0,0,0,0,0,0,0,0,0
7077 DATA 0,0,87,69,76,67,79,77,69,32,84,79
7078 DATA 0,32,32,87,73,78,84,69,82,32,32,0
7079 DATA 32,67,65,77,80,32,88,76,86,32,0
7080 DATA -1
7004 IF Z = -1 THEN GOTO 7081
7081 POKE 16526,0
7082 POKE 16527,96
7083 'END OF LOADER
7084 X=USR(0)
7110 PRINT "github.com/alnwlsn/WCXLV-potato"